CREATE OR REPLACE DISTRIBUTED QUERY bi20(STRING company, VERTEX<Person> person2Id) syntax v2 {
  TYPEDEF TUPLE<UINT person1Id, UINT totalWeight> RESULT;
  HeapAccum<RESULT>(20, totalWeight ASC, person1Id ASC) @@result;  
  OrAccum @visited, @next, @inCompany;
  MinAccum<UINT> @dist; 
  MapAccum<UINT, MinAccum<UINT>> @@paths;
  UINT threshold;
  threshold = 40;
  S1 =
    SELECT p
    FROM Company:c -(<WORK_AT)- Person:p
    WHERE c.name == company AND p != person2Id
    ACCUM p.@inCompany += true;
  
  S = {person2Id};
  S = Select s FROM S:s ACCUM s.@visited += true, s.@dist += 0;
  WHILE S.size()>0 DO
    S = SELECT t FROM S:s-(KNOWS:e)-Person:t 
      WHERE e.weight20 < 10000
      ACCUM 
        UINT t_dis = s.@dist + e.weight20,
        IF t_dis < t.@dist AND t_dis < threshold THEN
          t.@dist += t_dis,
          t.@next += true
        END
      HAVING t.@next;
    S = SELECT s FROM S:s  
      ACCUM s.@next = false, 
        IF s.@inCompany THEN @@paths += (s.id -> s.@dist) END;
      #HAVING NOT s.@inCompany;
    # Update the threshold
    IF S.size()>0 AND @@paths.size() >= 20 THEN
      @@result.clear();
      FOREACH (p,dist) IN @@paths DO
        @@result += RESULT(p,dist);
      END;
      FOREACH i IN RANGE[0, 19] DO
        threshold = @@result.pop().totalWeight;
      END; 
    END;
    
  END; # WHILE 
  FOREACH (p,dist) IN @@paths DO
    @@result += RESULT(p,dist);
  END;
  PRINT @@result as result;
}